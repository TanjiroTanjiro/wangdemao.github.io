<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://wangdemao.github.io</id>
    <title>Wang Demao&apos;s blog</title>
    <updated>2020-05-20T10:04:24.250Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://wangdemao.github.io"/>
    <link rel="self" href="https://wangdemao.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://wangdemao.github.io/images/avatar.png</logo>
    <icon>https://wangdemao.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, Wang Demao&apos;s blog</rights>
    <entry>
        <title type="html"><![CDATA[题解 UVA11462 【Age Sort】 ]]></title>
        <id>https://wangdemao.github.io/post/ti-jie-uva11462-age-sort/</id>
        <link href="https://wangdemao.github.io/post/ti-jie-uva11462-age-sort/">
        </link>
        <updated>2020-05-18T07:25:14.000Z</updated>
        <content type="html"><![CDATA[<p>这题几个坑点（没通过的同学请注意）：</p>
<ol>
<li>输出末尾不能有空格，否则会WA。</li>
<li>这题没有过度卡常，普通 <code>sort</code> 即可。</li>
<li>如果用 cin/cout 的话，要加上流优化：</li>
</ol>
<pre><code class="language-cpp">ios::sync_with_stdio(0); 
</code></pre>
<h3 id="代码">代码：</h3>
<pre><code class="language-cpp">#include &lt;iostream&gt;
#include &lt;algorithm&gt;

using namespace std;
int main()
{
	ios::sync_with_stdio(0);	//流优化 
	int n;
	
	while(cin&gt;&gt;n &amp;&amp; n!=0)	//读入数据 
	{
		int a[n];
		
		for(int i=0;i&lt;n;i++)
			cin&gt;&gt;a[i];
		
		sort(a,a+n);	//排序 
		
		for(int i=0;i&lt;n-1;i++)
			cout&lt;&lt;a[i]&lt;&lt;&quot; &quot;;
		cout&lt;&lt;a[n-1];	//末尾不能有空格 
		cout&lt;&lt;endl;
	}



	return 0;
}

</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[题解 CF747A 【Display Size】 ]]></title>
        <id>https://wangdemao.github.io/post/ti-jie-cf747a-display-size/</id>
        <link href="https://wangdemao.github.io/post/ti-jie-cf747a-display-size/">
        </link>
        <updated>2020-05-18T07:22:49.000Z</updated>
        <content type="html"><![CDATA[<p>这是一道数学题，因为题目里说了 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo>≤</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">a\leq b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span> ，可以推导出：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo>≤</mo><msqrt><mi>n</mi></msqrt><mo>≤</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">a\leq\sqrt{n}\leq b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.23972em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8002800000000001em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord mathdefault">n</span></span></span><span style="top:-2.76028em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.23972em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span> ，所以一个循环从 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> 到小枚举 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span> ,如果  <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mi mathvariant="normal">%</mi><mi>a</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">n\%a=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord mathdefault">n</span><span class="mord">%</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> ，即 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> 能被 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span> 整除，输出 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mi mathvariant="normal">/</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">n/a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">n</span><span class="mord">/</span><span class="mord mathdefault">a</span></span></span></span> 即可。</p>
<hr>
<h3 id="话不多说上代码"><strong>话不多说，上代码</strong></h3>
<pre><code class="language-cpp">#include &lt;iostream&gt;
#include &lt;cmath&gt;   //数学库

using namespace std;
int main()
{
	int n;
	
	cin&gt;&gt;n;
	
	for(int i=sqrt(n);i&gt;=1;i--)
	{
		if(n%i==0)
		{
			cout&lt;&lt;i&lt;&lt;&quot; &quot;&lt;&lt;n/i;
			return 0;
		}
	}



	return 0;
}

</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[用蒙特卡洛模拟算π]]></title>
        <id>https://wangdemao.github.io/post/yong-meng-te-qia-luo-mo-ni-suan-p/</id>
        <link href="https://wangdemao.github.io/post/yong-meng-te-qia-luo-mo-ni-suan-p/">
        </link>
        <updated>2020-05-17T06:29:35.000Z</updated>
        <content type="html"><![CDATA[<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mstyle mathcolor="grey"><mi mathvariant="normal">“</mi><mi mathvariant="normal">相</mi><mi mathvariant="normal">信</mi><mi mathvariant="normal">大</mi><mi mathvariant="normal">家</mi><mi mathvariant="normal">都</mi><mi mathvariant="normal">知</mi><mi mathvariant="normal">道</mi><mi>π</mi><mi mathvariant="normal">，</mi><mi mathvariant="normal">但</mi><mi mathvariant="normal">怎</mi><mi mathvariant="normal">么</mi><mi mathvariant="normal">用</mi><mi>C</mi><mo>+</mo><mo>+</mo><mi mathvariant="normal">算</mi><mi mathvariant="normal">出</mi><mi>π</mi><mi mathvariant="normal">呢</mi><mi mathvariant="normal">，</mi><mi mathvariant="normal">今</mi><mi mathvariant="normal">天</mi><mi mathvariant="normal">我</mi><mi mathvariant="normal">们</mi><mi mathvariant="normal">就</mi><mi mathvariant="normal">来</mi><mi mathvariant="normal">探</mi><mi mathvariant="normal">讨</mi><mi mathvariant="normal">一</mi><mi mathvariant="normal">下</mi><mi mathvariant="normal">。</mi><mi mathvariant="normal">”</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{grey}“ 相信大家都知道π，但怎么用C++算出π呢，今天我们就来探讨一下。”}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord" style="color:grey;">“</span><span class="mord cjk_fallback" style="color:grey;">相</span><span class="mord cjk_fallback" style="color:grey;">信</span><span class="mord cjk_fallback" style="color:grey;">大</span><span class="mord cjk_fallback" style="color:grey;">家</span><span class="mord cjk_fallback" style="color:grey;">都</span><span class="mord cjk_fallback" style="color:grey;">知</span><span class="mord cjk_fallback" style="color:grey;">道</span><span class="mord mathdefault" style="margin-right:0.03588em;color:grey;">π</span><span class="mord cjk_fallback" style="color:grey;">，</span><span class="mord cjk_fallback" style="color:grey;">但</span><span class="mord cjk_fallback" style="color:grey;">怎</span><span class="mord cjk_fallback" style="color:grey;">么</span><span class="mord cjk_fallback" style="color:grey;">用</span><span class="mord mathdefault" style="margin-right:0.07153em;color:grey;">C</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin" style="color:grey;">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord" style="color:grey;">+</span><span class="mord cjk_fallback" style="color:grey;">算</span><span class="mord cjk_fallback" style="color:grey;">出</span><span class="mord mathdefault" style="margin-right:0.03588em;color:grey;">π</span><span class="mord cjk_fallback" style="color:grey;">呢</span><span class="mord cjk_fallback" style="color:grey;">，</span><span class="mord cjk_fallback" style="color:grey;">今</span><span class="mord cjk_fallback" style="color:grey;">天</span><span class="mord cjk_fallback" style="color:grey;">我</span><span class="mord cjk_fallback" style="color:grey;">们</span><span class="mord cjk_fallback" style="color:grey;">就</span><span class="mord cjk_fallback" style="color:grey;">来</span><span class="mord cjk_fallback" style="color:grey;">探</span><span class="mord cjk_fallback" style="color:grey;">讨</span><span class="mord cjk_fallback" style="color:grey;">一</span><span class="mord cjk_fallback" style="color:grey;">下</span><span class="mord cjk_fallback" style="color:grey;">。</span><span class="mord" style="color:grey;">”</span></span></span></span></span></p>
<h2 id="01算法">01.算法</h2>
<p>相信大家都知道下图中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">方</mi><mi mathvariant="normal">块</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">面</mi><mi mathvariant="normal">积</mi><mo>:</mo><mi mathvariant="normal">圆</mi><mi mathvariant="normal">圈</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">面</mi><mi mathvariant="normal">积</mi><mo>=</mo><mn>4</mn><mo>:</mo><mi>π</mi></mrow><annotation encoding="application/x-tex">方块的面积:圆圈的面积=4:π</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord cjk_fallback">方</span><span class="mord cjk_fallback">块</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">面</span><span class="mord cjk_fallback">积</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mord cjk_fallback">圆</span><span class="mord cjk_fallback">圈</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">面</span><span class="mord cjk_fallback">积</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span></span></span></span>，即<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>π</mi><mo>=</mo><mi mathvariant="normal">圆</mi><mi mathvariant="normal">圈</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">面</mi><mi mathvariant="normal">积</mi><mo>÷</mo><mi mathvariant="normal">方</mi><mi mathvariant="normal">块</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">面</mi><mi mathvariant="normal">积</mi></mrow><annotation encoding="application/x-tex">π=圆圈的面积÷方块的面积</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">圆</span><span class="mord cjk_fallback">圈</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">面</span><span class="mord cjk_fallback">积</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">÷</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0em;vertical-align:0em;"></span><span class="mord cjk_fallback">方</span><span class="mord cjk_fallback">块</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">面</span><span class="mord cjk_fallback">积</span></span></span></span>×4,。</p>
<figure data-type="image" tabindex="1"><img src="https://wangdemao.github.io/post-images/1589697019339.jpg" alt="" loading="lazy"></figure>
<p>我们可以假设圆上有10000个点（数字越大，精度越高），只需要求出每个点和圆心的距离是否大于圆的半径就可以知道这个点是否在圆内，即：</p>
<figure data-type="image" tabindex="2"><img src="https://wangdemao.github.io/post-images/1589702570909.jpg" alt="" loading="lazy"></figure>
<h2 id="02代码实现">02.代码实现</h2>
<p>现在，我们来说代码的具体实现。</p>
<pre><code class="language-cpp">#include &lt;iostream&gt;
#include &lt;cmath&gt;    //开根号要用到
#include &lt;iomanip&gt;

using namespace std;

long double check(long double i,long double j,long double n)
{
  long double ans=sqrt(double(pow(abs(n/2.0-i),2)+pow(abs(n/2.0-j),2)));		//详见上面的公式 
  
  return ans;
}

int main()
{
  long double pai;
  long double n,incircle=0,square,banjing;
  
  cout&lt;&lt;&quot;请输入模拟次数n: \n由于C++精度所限，无法算得太大\nn=________\b\b\b\b\b\b&quot;;    //输出提示信息 
  cin&gt;&gt;n;		//输入数据 

  square=n*n;
  
  for(long long i=1;i&lt;=n;i++)
  {
    for(long long j=1;j&lt;=n;j++)
    {
      if(check(i,j,n)&lt;=n/2.0)
        incircle++;
    }
  }
  
  pai=((incircle/square)*4.0);		//算出结果 
  
  cout&lt;&lt;&quot;π≈&quot;&lt;&lt;fixed &lt;&lt;setprecision(10)&lt;&lt;pai;

  return 0;
}
</code></pre>
<p>结果：</p>
<figure data-type="image" tabindex="3"><img src="https://wangdemao.github.io/post-images/1589697071256.jpg" alt="" loading="lazy"></figure>
<p>注：由于C++精度问题，可能会有误差</p>
<p>谢谢大家。</p>
]]></content>
    </entry>
</feed>